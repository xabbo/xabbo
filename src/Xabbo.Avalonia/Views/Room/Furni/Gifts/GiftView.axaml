<UserControl
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:converters="using:Avalonia.Controls.Converters"
  xmlns:ic="using:FluentIcons.Avalonia.Fluent"
  xmlns:controls="using:Xabbo.Avalonia.Controls"
  xmlns:vm="using:Xabbo.ViewModels"
  xmlns:services="using:Xabbo.Avalonia.Services"
  xmlns:img="using:AsyncImageLoader"
  mc:Ignorable="d" d:DesignWidth="600"
  x:Class="Xabbo.Avalonia.Views.GiftView"
  x:DataType="vm:GiftViewModel"
  Classes.peek="{Binding IsPeeking}"
>
  <Design.DataContext>
    <x:Static Member='vm:DesignViewModels.GiftViewModel' />
  </Design.DataContext>
  <UserControl.Styles>
    <Style Selector="Grid#GiftContents">
      <Setter Property="Opacity" Value="0" />
      <Style Selector="^.fadein">
        <Setter Property="Transitions">
          <Transitions>
            <DoubleTransition Property="Opacity" Duration="0:0:0.5" />
          </Transitions>
        </Setter>
      </Style>
    </Style>
    <Style Selector=".peek">
      <Style Selector="^ Grid#GiftContents">
        <Setter Property="Opacity" Value="1" />
      </Style>
    </Style>
  </UserControl.Styles>
  <StackPanel>
    <Border
      BorderThickness="1,1,1,0"
      BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
      Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
      CornerRadius="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}"
    >
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <controls:AvatarImage
          Classes="avatarimage head"
          Margin="10,0,0,0"
          HeadOnly="true"
          FigureString="{Binding SenderFigure}"
        />
        <Grid Grid.Column="1" Margin="8">
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <TextBlock Text="{Binding Message, Converter={StaticResource HabboStringConverter}}" TextWrapping="Wrap" />
          <TextBlock Classes="privacy" Grid.Row="1" HorizontalAlignment="Right" Text="{Binding SenderName}" />
        </Grid>
      </Grid>
    </Border>
    <Border
      BorderThickness="1"
      BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
      Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}"
      CornerRadius="{Binding Source={StaticResource ControlCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
    >
      <Grid>
        <Button
          x:Name="PeekButton"
          Theme="{StaticResource TransparentButton}"
          Padding="5"
          HorizontalAlignment="Center"
          HorizontalContentAlignment="Center"
          Background="Transparent"
          Opacity="0.5"
          FontSize="10"
          Command="{Binding PeekCmd}"
          ToolTip.Tip="Peek"
          IsVisible="{Binding !IsPeeking}"
          IsEnabled="{Binding CanPeek}"
        >
          <ic:SymbolIcon>
            <ic:SymbolIcon.Styles>
              <Style Selector="ic|SymbolIcon">
                <Setter Property="Symbol" Value="Eye" />
                <Style Selector="^:disabled">
                  <Setter Property="Symbol" Value="EyeOff" />
                </Style>
              </Style>
            </ic:SymbolIcon.Styles>
          </ic:SymbolIcon>
        </Button>
        <Grid
          x:Name="GiftContents"
          Margin="10"
          ColumnDefinitions="Auto,*"
          IsVisible="{Binding IsPeeking}"
        >
          <img:AdvancedImage
            Margin="0,0,8,0"
            Classes="itemicon"
            IsVisible="{Binding ItemImageUrl, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
            Source="{Binding ItemImageUrl}"
            Loader="{x:Static services:XabboImageLoader.Instance}"
            VerticalAlignment="Center"
          />
          <StackPanel Grid.Column="1" VerticalAlignment="Center">
            <TextBlock FontWeight="Bold" TextWrapping="Wrap" Text="{Binding ItemName}" />
            <TextBlock IsVisible="{Binding !IsTrophy}" Text="{Binding ExtraParameter}">
              <TextBlock.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                  <Binding Path="ExtraParameter" Converter="{x:Static StringConverters.IsNotNullOrEmpty}" />
                  <Binding Path="!IsTrophy" />
                </MultiBinding>
              </TextBlock.IsVisible>
            </TextBlock>
            <TextBlock
              IsVisible="{Binding TrophyMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
              TextWrapping="Wrap"
              Text="{Binding TrophyMessage}"
            />
            <TextBlock
              HorizontalAlignment="Right"
              IsVisible="{Binding TrophyDate, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
              FontWeight="Bold"
              TextWrapping="Wrap"
              Text="{Binding TrophyDate}"
            />
          </StackPanel>
        </Grid>
      </Grid>
    </Border>
  </StackPanel>
</UserControl>
