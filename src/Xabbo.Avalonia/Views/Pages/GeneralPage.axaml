<UserControl
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ui="using:FluentAvalonia.UI.Controls"
  xmlns:ic="using:FluentIcons.Avalonia.Fluent"
  xmlns:vm="using:Xabbo.ViewModels"
  x:DataType="vm:GeneralPageViewModel"
  mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
  x:Class="Xabbo.Avalonia.Views.GeneralPage"
  Padding="10"
>
  <Design.DataContext>
    <vm:GeneralPageViewModel />
  </Design.DataContext>
  <UserControl.Resources>
     <Thickness x:Key="ExpanderHeaderPadding">10,5,0,5</Thickness>
     <x:Double x:Key="ExpanderMinHeight">0</x:Double>
     <Thickness x:Key="ExpanderContentPadding">10,5</Thickness>
  </UserControl.Resources>
  <UserControl.Styles>
    <Style Selector=":is(Control)">
      <Setter Property="ToolTip.ShowDelay" Value="800" />
    </Style>
  </UserControl.Styles>
  <ScrollViewer
    VerticalScrollBarVisibility="Auto"
    IsScrollInertiaEnabled="True"
  >
    <StackPanel Spacing="10">
      <!-- Room -->
      <Expander IsExpanded="{Binding IsRoomExpanded}">
        <Expander.Header>
          <StackPanel Orientation="Horizontal" Spacing="5">
            <ic:SymbolIcon Symbol="Home" />
            <TextBlock Text="Room" />
          </StackPanel>
        </Expander.Header>
        <!-- Content -->
        <StackPanel>
          <StackPanel Orientation="Horizontal">
            <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">Anti</TextBlock>
            <CheckBox
              Content="Idle"
              ToolTip.Tip="Prevents you from idling"
              IsChecked="{Binding Config.General.AntiIdle}"
            />
            <CheckBox
              Content="Idle-out"
              Classes="modern"
              ToolTip.Tip="Allows you to idle, but prevents you from leaving the room"
              IsEnabled="{Binding !Config.General.AntiIdle}"
              IsChecked="{Binding Config.General.AntiIdleOut}"
            />
            <CheckBox
              Content="Trade"
              ToolTip.Tip="Prevents others from trading you"
              IsChecked="{Binding Config.General.AntiTrade}"
              IsEnabled="{Binding AntiTrade.IsAvailable}"
            />
          </StackPanel>
          <Expander
            Margin="0,5"
            IsExpanded="{Binding IsMovementExpanded}"
          >
            <Expander.Header>
              <StackPanel Orientation="Horizontal" Spacing="5">
                <ic:SymbolIcon Symbol="Accessibility" />
                <TextBlock Text="Movement" />
              </StackPanel>
            </Expander.Header>
            <StackPanel>
              <StackPanel Orientation="Horizontal">
                <CheckBox
                  Content="No turn"
                  ToolTip.Tip="Don't turn when clicking another user"
                  IsChecked="{Binding Config.Movement.NoTurn}"
                />
                <CheckBox
                  Content="except when re-selecting user"
                  IsEnabled="{Binding Config.Movement.NoTurn}"
                  IsChecked="{Binding Config.Movement.TurnOnReselectUser}"
                />
              </StackPanel>
              <StackPanel Orientation="Horizontal">
                <CheckBox
                  Content="No walk"
                  IsChecked="{Binding Config.Movement.NoWalk}"
                />
                <CheckBox
                  Content="turn towards tile clicked"
                  IsEnabled="{Binding Config.Movement.NoWalk}"
                  IsChecked="{Binding Config.Movement.TurnTowardsClickedTile}"
                />
              </StackPanel>
              <CheckBox
                Content="Click through users"
                Classes="modern"
                ToolTip.ShowDelay="100"
                ToolTip.Tip="Allows you to click on tiles behind users to walk"
                IsChecked="{Binding ClickThrough.Enabled}"
              />
            </StackPanel>
          </Expander>
          <Expander
            Margin="0,5"
            IsExpanded="{Binding IsClickToExpanded}"
          >
            <Expander.Header>
              <CheckBox IsChecked="{Binding ClickTo.Enabled}">
                <StackPanel Orientation="Horizontal" Spacing="5">
                  <ic:SymbolIcon Symbol="CursorClick" />
                  <TextBlock Text="Click to" />
                </StackPanel>
              </CheckBox>
            </Expander.Header>
            <StackPanel>
              <StackPanel Classes="modern" Orientation="Horizontal">
                <RadioButton
                  GroupName="ClickTo"
                  Content="Mute for"
                  IsChecked="{Binding ClickTo.Mute}"
                />
                <NumericUpDown
                  Minimum="0" Maximum="500"
                  Width="150"
                  Margin="0,0,10,0"
                  Value="{Binding ClickTo.MuteValue}"
                />
                <RadioButton
                  GroupName="ClickToMute"
                  Content="minutes"
                  IsChecked="{Binding ClickTo.MuteInMinutes}"
                />
                <RadioButton
                  GroupName="ClickToMute"
                  Content="hours"
                  IsChecked="{Binding ClickTo.MuteInHours}"
                />
              </StackPanel>
              <RadioButton
                GroupName="ClickTo"
                Content="Kick"
                IsChecked="{Binding ClickTo.Kick}"
              />
              <StackPanel Orientation="Horizontal">
                <RadioButton
                  GroupName="ClickTo"
                  Content="Ban for"
                  IsChecked="{Binding ClickTo.Ban}"
                />
                <RadioButton
                  GroupName="ClickToBan"
                  Content="an hour"
                  IsChecked="{Binding ClickTo.BanHour}"
                />
                <RadioButton
                  GroupName="ClickToBan"
                  Content="a day"
                  IsChecked="{Binding ClickTo.BanDay}"
                />
                <RadioButton
                  GroupName="ClickToBan"
                  Content="permanently"
                  IsChecked="{Binding ClickTo.BanPerm}"
                />
              </StackPanel>
              <RadioButton
                Classes="modern"
                GroupName="ClickTo"
                Content="Bounce"
                IsChecked="{Binding ClickTo.Bounce}"
              >
                <ToolTip.Tip>
                  Ban then unban - "kicks" the user with no kick alert
                </ToolTip.Tip>
              </RadioButton>
              <StackPanel Orientation="Horizontal">
                <TextBlock
                  Margin="0,0,10,0"
                  VerticalAlignment="Center"
                  Text="Exclude"
                />
                <CheckBox
                  Content="Friends"
                  IsChecked="{Binding Config.General.ClickToIgnoresFriends}"
                />
              </StackPanel>
            </StackPanel>
          </Expander>
          <Expander
            Margin="0,5"
            IsExpanded="{Binding IsEntryExpanded}"
          >
            <Expander.Header>
              <StackPanel Orientation="Horizontal" Spacing="5">
                <ic:SymbolIcon Symbol="DoorArrowLeft" />
                <TextBlock Text="Entry" />
              </StackPanel>
            </Expander.Header>
            <StackPanel>
              <CheckBox
                Content="Remember room passwords"
                IsChecked="{Binding Config.Room.RememberPasswords}"
              />
              <CheckBox
                Content="Auto accept friends at door"
                IsChecked="{Binding Config.Room.AcceptFriendsAtDoor}"
              />
            </StackPanel>
          </Expander>
          <CheckBox
            Content="Flatten floor plan"
            Classes="modern"
            IsChecked="{Binding Flatten.Enabled}"
          />
          <CheckBox
            Content="Show self through furni"
            Classes="modern"
            IsChecked="{Binding Overlay.Enabled}"
          />
          <CheckBox
            Content="Hide all avatars"
            IsChecked="{Binding Avatars.HideAvatars}"
          />
        </StackPanel>
      </Expander>

      <!-- Chat -->
      <Expander IsExpanded="{Binding IsChatExpanded}">
        <Expander.Header>
          <StackPanel Orientation="Horizontal" Spacing="5">
            <ic:SymbolIcon Symbol="Chat" />
            <TextBlock Text="Chat" />
          </StackPanel>
        </Expander.Header>
        <!-- Content -->
        <StackPanel>
          <CheckBox
            Content="No typing indicator"
            Classes="modern"
            IsChecked="{Binding Config.General.AntiTyping}"
          />
          <CheckBox
            Content="Always shout"
            IsChecked="{Binding Config.Chat.AlwaysShout}"
          />
          <Expander
            Margin="0,5,0,5"
            IsExpanded="{Binding IsMuteExpanded}"
          >
            <Expander.Header>
              <StackPanel Orientation="Horizontal" Spacing="5">
                <ic:SymbolIcon Symbol="ChatOff" />
                <TextBlock Text="Mute" />
              </StackPanel>
            </Expander.Header>
            <WrapPanel>
              <CheckBox x:Name="MuteAll" Content="All" IsChecked="{Binding Config.Chat.MuteAll}" />
              <CheckBox Content="Bots" IsEnabled="{Binding !#MuteAll.IsChecked}" IsChecked="{Binding Config.Chat.MuteBots}" />
              <CheckBox Content="Pets" IsEnabled="{Binding !#MuteAll.IsChecked}" IsChecked="{Binding Config.Chat.MutePets}" />
              <CheckBox Content="Pet commands" Classes="modern" IsEnabled="{Binding !#MuteAll.IsChecked}" IsChecked="{Binding Config.Chat.MutePetCommands}" />
              <CheckBox Content="Wired messages" Classes="modern" IsEnabled="{Binding !#MuteAll.IsChecked}" IsChecked="{Binding Config.Chat.MuteWired}" />
              <CheckBox Content="Respects" Classes="modern" IsEnabled="{Binding !#MuteAll.IsChecked}" IsChecked="{Binding Config.Chat.MuteRespects}" />
              <CheckBox Content="Scratches" Classes="modern" IsEnabled="{Binding !#MuteAll.IsChecked}" IsChecked="{Binding Config.Chat.MuteScratches}" />
            </WrapPanel>
          </Expander>
          <CheckBox Content="Show who respected" Classes="modern" IsChecked="{Binding Respected.ShowWhoRespected}" />
          <CheckBox Content="Show total respect count" Classes="modern" IsChecked="{Binding Respected.ShowTotalRespects}" />
        </StackPanel>
      </Expander>

      <!-- Furni -->
      <Expander IsExpanded="{Binding IsFurniExpanded}">
        <Expander.Header>
          <StackPanel Orientation="Horizontal" Spacing="5">
            <ic:SymbolIcon Symbol="Couch" />
            <TextBlock Text="Furni" />
          </StackPanel>
        </Expander.Header>
        <!-- Content -->
        <StackPanel>
          <CheckBox Content="Prevent using furni" IsChecked="{Binding Furni.PreventUse}" />
          <CheckBox Content="Ctrl-click to show info" IsChecked="{Binding Furni.PickToShowInfo}" />
          <CheckBox Classes="modern" Content="Ctrl-click to fetch marketplace stats" IsChecked="{Binding Furni.PickToFetchMarketplaceStats}" />
          <CheckBox Content="Ctrl-click to hide" IsChecked="{Binding Furni.PickToHide}" />
          <CheckBox Content="Ctrl-click tele to find link" IsChecked="{Binding Furni.PickToFindLink}" />
        </StackPanel>
      </Expander>

      <!-- Hand item -->
      <Expander Classes="modern" IsExpanded="{Binding IsHandItemExpanded}">
        <Expander.Header>
          <StackPanel Orientation="Horizontal" Spacing="5">
            <ic:SymbolIcon Symbol="HandRight" />
            <TextBlock Text="Hand item" />
          </StackPanel>
        </Expander.Header>
        <!-- Content -->
        <StackPanel>
          <CheckBox Content="Drop received hand item" IsChecked="{Binding HandItem.DropHandItem}" />
          <CheckBox Content="Return received hand item" IsChecked="{Binding HandItem.ReturnHandItem}" />
          <CheckBox Content="Try maintain direction when given hand item" IsChecked="{Binding HandItem.ShouldMaintainDirection}" />
        </StackPanel>
      </Expander>

      <!-- Alerts -->
      <Expander IsExpanded="{Binding IsAlertsExpanded}" IsVisible="False">
        <Expander.Header>
          <StackPanel Orientation="Horizontal" Spacing="5">
            <ic:SymbolIcon Symbol="Alert" />
            <TextBlock Text="Alerts" />
          </StackPanel>
        </Expander.Header>
        <!-- Content -->
        <Expander
          Header="Flash window"
          IsExpanded="{Binding IsFlashWindowExpanded}"
        >
          <WrapPanel>
            <CheckBox Content="Whisper" />
            <CheckBox Content="User chat" />
            <CheckBox Content="Friend chat" />
            <CheckBox Content="User entered" />
            <CheckBox Content="Friend entered" />
            <CheckBox Content="Private message" />
          </WrapPanel>
        </Expander>
      </Expander>

      <!-- Misc -->
      <Expander Classes="modern" IsExpanded="{Binding IsMiscExpanded}">
        <Expander.Header>
          <StackPanel Orientation="Horizontal" Spacing="5">
            <ic:SymbolIcon Symbol="GridDots" />
            <TextBlock Text="Misc." />
          </StackPanel>
        </Expander.Header>
        <!-- Content -->
        <StackPanel Spacing="10">
          <CheckBox Content="Block HC gift notification" IsChecked="{Binding AntiHcNotification.Enabled}" />
          <StackPanel Orientation="Horizontal" Spacing="10">
            <ColorPicker
              IsEnabled="{Binding Lighting.IsTonerAvailable}"
              Color="{Binding Lighting.TonerColor, Converter={StaticResource HslU8Converter}}"
            />
            <CheckBox
              IsEnabled="{Binding Lighting.IsTonerAvailable}"
              IsChecked="{Binding Lighting.IsTonerActive}"
              VerticalAlignment="Center"
              Content="Background toner"
            />
          </StackPanel>
        </StackPanel>
      </Expander>
    </StackPanel>

  </ScrollViewer>
</UserControl>
